var decimalToSwim = function(time) {
    var min, sec;
    if (!time) return 0;
    
	min = parseInt(time / 60);
	if (min === 0) return Number(time).toFixed(2);
	
	sec = (time % 60);
	sec = Number(sec).toFixed(2);
	if(sec < 10) {
		sec = "0"+(sec);
	}
	
	return min+":"+sec;
};

var swimToDecimal = function (time) {
    if (time.indexOf(':') != -1) {
        var minutes = time.substr(0,time.indexOf(':')),
            seconds = time.substr(time.indexOf(':')+1);
        minutes = parseInt(minutes)*60;
        return minutes + parseFloat(seconds);
    }
    return parseFloat(time);
};

function getUrl(url, params) {
	var pstr = '', urllist, path, pairs;
	var s = url.replace(/^\?|#.*$/g, ''); 
	
	//parse url and parameters
	urllist = s.split('?');
    path = urllist[0];
	if (urllist.length>=2) {
		var qs = urllist[1];
		pairs = qs.split('&');
		for (var i=0; i < pairs.length; i++) {
			var parts = pairs[i].split('=');
			if(!params.hasOwnProperty(parts[0])) params[parts[0]] = parts[1];
		}
	}                         

	//put parameters back on
  	if (params) {         
		pairs = []; 
		for (var i in params) {
            if (!params[i]) continue;
			pairs.push(i+'='+ encodeURIComponent(params[i]));
		}
		pstr = pairs.join('&');
	}    
	            
	//add query string back on
	if (pstr) path += '?' + pstr;
	
	return path;
}

function getUrlParam(name, url) {
    name = name.replace(/[\[]/,"\\\[").replace(/[\]]/,"\\\]");
    var regexS = "[\\?&]"+name+"=([^&#]*)";
    var regex = new RegExp(regexS);
    var uri = url ? url : window.location.href;
    var results = regex.exec(uri);
    return (results == null) ? '' : results[1];
}

function post_to_url(path, params, method) {
    method = method || "post"; // Set method to post by default if not specified.

    // The rest of this code assumes you are not using a library.
    // It can be made less wordy if you use one.
    var form = document.createElement("form");
    form.setAttribute("method", method);
    form.setAttribute("action", path);

    for(var key in params) {
        if(params.hasOwnProperty(key)) {
            var hiddenField = document.createElement("input");
            hiddenField.setAttribute("type", "hidden");
            hiddenField.setAttribute("name", key);
            hiddenField.setAttribute("value", params[key]);

            form.appendChild(hiddenField);
         }
    }

    document.body.appendChild(form);
    form.submit();
}